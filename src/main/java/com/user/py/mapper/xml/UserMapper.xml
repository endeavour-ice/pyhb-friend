<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.user.py.mapper.UserMapper">

    <resultMap id="resultUserAvatarVo" type="com.user.py.mode.entity.vo.UserAvatarVo">
        <id property="id" column="id"/>
        <result property="username" column="user_account"/>
        <result property="avatarUrl" column="avatar_url"/>
    </resultMap>
    <insert id="saveFriend">
        insert into user_friend values (#{id},#{userId},#{friendId},null,CURRENT_TIMESTAMP,0)
    </insert>
    <select id="getUserAvatarVoByIds" resultMap="resultUserAvatarVo">
        select id, user_account, avatar_url
        from `user`
        where id in (${ids}) and is_delete=0;
    </select>
    <select id="getUserCount" resultType="java.lang.Long">
        select count(1)
        from `user`
        where is_delete=0;
    </select>
    <resultMap id="userVo" type="com.user.py.mode.entity.vo.UserVo">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="userAccount" column="user_account"/>
        <result property="avatarUrl" column="avatar_url"/>
        <result property="gender" column="gender"/>
        <result property="tel" column="tel"/>
        <result property="email" column="email"/>
        <result property="tags" column="tags"/>
        <result property="userStatus" column="user_status"/>
        <result property="profile" column="profile"/>
        <result property="role" column="role"/>
        <result property="planetCode" column="planet_code"/>
        <result property="createTime" column="create_time"/>
    </resultMap>
    <select id="selectFindByUserAccountLikePage" resultMap="userVo">
        <include refid="userVoFromUser"/>
        <choose>
            <when test="pageNum>=700000">
                where id>= (select id from `user`  limit #{pageNum},1)  limit #{pageSize}
            </when>
            <when test="userName!=null and userName!=''">
                where user_account like #{userName}"%" limit #{pageNum},#{pageSize}
            </when>
            <otherwise>
                limit #{pageNum},#{pageSize} and is_delete=0
            </otherwise>
        </choose>



    </select>
    <select id="selectByNameLike" resultMap="userVo">
        <include refid="userVoFromUser"/> where user_account = #{name} and is_delete=0
    </select>
    <select id="selectUserVoList" resultMap="userVo">
        <include refid="userVoFromUser"/>  where is_delete=0 and user_status=#{status}  order by create_time asc limit #{current},#{size}
    </select>

    <sql id="userVoFromUser">
        select id,
               username,
               user_account,
               avatar_url,
               gender,
               profile,
               tel,
               email,
               tags,
               user_status,
               `role`,
               planet_code,
               create_time
        from `user`
    </sql>

</mapper>
